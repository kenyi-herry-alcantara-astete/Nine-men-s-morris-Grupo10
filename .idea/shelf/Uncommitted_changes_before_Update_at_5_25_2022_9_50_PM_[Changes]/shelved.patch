Index: src/main/java/FirstPanel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import javax.swing.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\n\r\npublic class FirstPanel extends JFrame {\r\n\r\n\r\n    private JButton jugarButton;\r\n    private JPanel firstPanel;\r\n    private JTextField Nombre1;\r\n    private JTextField Nombre2;\r\n    public  JCheckBox jugador2CheckBox ;\r\n    public  JCheckBox jugador1CheckBox1;\r\n    private JLabel LabelNamePlayer1;\r\n    private JLabel LabelNamePlayer2;\r\n\r\n    public FirstPanel() {\r\n        //Caracteristicas de la ventana que se va abrir\r\n\r\n        setContentPane(firstPanel);\r\n        //setSize(600,4);\r\n        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n        setBounds(250,100,720,520);\r\n        setBounds(250,100,820,620);\r\n        setVisible(true);\r\n\r\n\r\n\r\n        jugarButton.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n\r\n                String nombre1 , nombre2;\r\n                //nombre1 = getNamePlayer(1); //textNombre.getText();\r\n                //nombre2 = getNamePlayer(2);//miNombre.getText();\r\n                MainFrame obj = new MainFrame();\r\n                obj.player1.name = Nombre1.getText();\r\n                obj.player2.name = Nombre2.getText();\r\n                obj.setNameInTheUI();\r\n                obj.showTurnInUI();\r\n\r\n                dispose();\r\n\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n    public String getNamePlayer(int n){\r\n        if(n==1) {\r\n           return Nombre1.getText();\r\n        }\r\n        if(n==2) {\r\n           return Nombre2.getText();\r\n        }\r\n            return \" \";\r\n    }\r\n\r\n\r\n    public JPanel getFirstPanel(){\r\n        return  firstPanel;\r\n    }\r\n\r\n\r\n    private void createUIComponents() {\r\n        // TODO: place custom component creation code here\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/FirstPanel.java b/src/main/java/FirstPanel.java
--- a/src/main/java/FirstPanel.java	(revision 6ccc77d61e32530f8dbe398eb7159366c564889f)
+++ b/src/main/java/FirstPanel.java	(date 1653376876826)
@@ -30,12 +30,10 @@
             @Override
             public void actionPerformed(ActionEvent e) {
 
-                String nombre1 , nombre2;
-                //nombre1 = getNamePlayer(1); //textNombre.getText();
-                //nombre2 = getNamePlayer(2);//miNombre.getText();
                 MainFrame obj = new MainFrame();
+                //Computer obj1 = new Computer("Computadora","right","dos");
                 obj.player1.name = Nombre1.getText();
-                obj.player2.name = Nombre2.getText();
+               obj.player2.name = Nombre2.getText();
                 obj.setNameInTheUI();
                 obj.showTurnInUI();
 
@@ -62,7 +60,5 @@
     }
 
 
-    private void createUIComponents() {
-        // TODO: place custom component creation code here
-    }
+
 }
Index: src/main/java/MainFrame.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\n\r\n\r\npublic class MainFrame extends JFrame {\r\n\r\n\r\n\r\n    public Player player1 = new Player(\"left\",\"uno\");\r\n    public Player player2 = new Player(\"right\",\"dos\");\r\n\r\n    public Logic currentLogicGame = new Logic();\r\n\r\n    ImageIcon IconWithPiece1 = new ImageIcon(\"src/main/resources/Image/IconWithPiece1.png\");\r\n    ImageIcon IconWithPiece2 = new ImageIcon(\"src/main/resources/Image/IconWithPiece2.png\");\r\n    ImageIcon IconContentEmpty = new ImageIcon(\"src/main/resources/Image/IconContentPiece.png\");\r\n    ImageIcon IconMove = new ImageIcon(\"src/main/resources/Image/AvailableContent.png\");\r\n\r\n    private JPanel PanelPrincipal;\r\n    private JPanel CenterPanel;\r\n    private JButton a7;\r\n    private JButton d7;\r\n    private JButton g7;\r\n    private JButton b6;\r\n    private JButton d6;\r\n    private JButton f6;\r\n    private JButton c5;\r\n    private JButton d5;\r\n    private JButton e5;\r\n    private JButton a4;\r\n    private JButton b4;\r\n    private JButton c4;\r\n    private JButton e4;\r\n    private JButton f4;\r\n    private JButton g4;\r\n    private JButton c3;\r\n    private JButton d3;\r\n    private JButton e3;\r\n    private JButton b2;\r\n    private JButton d2;\r\n    private JButton f2;\r\n    private JButton a1;\r\n    private JButton d1;\r\n    private JButton g1;\r\n    private JButton pieceLeft1;\r\n    private JButton pieceLeft2;\r\n    private JButton pieceLeft3;\r\n    private JButton pieceLeft4;\r\n    private JButton pieceLeft5;\r\n    private JButton pieceLeft6;\r\n    private JButton pieceLeft7;\r\n    private JButton pieceLeft8;\r\n    private JButton pieceLeft9;\r\n    private JButton pieceRight1;\r\n    private JButton pieceRight2;\r\n    private JButton pieceRight3;\r\n    private JButton pieceRight4;\r\n    private JButton pieceRight5;\r\n    private JButton pieceRight6;\r\n    private JButton pieceRight7;\r\n    private JButton pieceRight8;\r\n    private JButton pieceRight9;\r\n\r\n\r\n    private JButton[] pieceLeft = {pieceLeft1, pieceLeft2, pieceLeft3, pieceLeft4, pieceLeft5, pieceLeft6, pieceLeft7, pieceLeft8, pieceLeft9};\r\n    private JButton[] pieceRight = {pieceRight1, pieceRight2, pieceRight3, pieceRight4, pieceRight5, pieceRight6, pieceRight7, pieceRight8, pieceRight9};\r\n    JLabel namePlayerLeft;\r\n    JLabel namePlayerRight;\r\n    private JLabel showIUResult;\r\n\r\n\r\n    //Methodos que enviaran las entradas de los jugarores\r\n    /**/\r\n\r\n    //Current Player\r\n    public Player currentTurn() {\r\n        if (player1.turn.equals(\"uno\")) {\r\n            return player1;\r\n        } else return player2;\r\n    }\r\n\r\n    //Show the turn\r\n    public void showTurnInUI() {\r\n        if (player1.turn.equals(\"uno\")) {\r\n            if (namePlayerLeft.getText().equals(player1.name)) {\r\n                namePlayerLeft.setBackground(new Color(94, 0, 215));\r\n                namePlayerRight.setBackground(new Color(32, 36, 74));\r\n            } else {\r\n                namePlayerRight.setBackground(new Color(94, 0, 215));\r\n                namePlayerLeft.setBackground(new Color(32, 36, 74));\r\n            }\r\n        }\r\n\r\n        if (player2.turn.equals(\"uno\")){\r\n            if (namePlayerRight.getText().equals(player2.name)) {\r\n                namePlayerRight.setBackground(new Color(94, 0, 215));\r\n                namePlayerLeft.setBackground(new Color(32, 36, 74));\r\n            } else {\r\n                namePlayerLeft.setBackground(new Color(94, 0, 215));\r\n                namePlayerRight.setBackground(new Color(32, 36, 74));\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    //Change turn\r\n    public void changeTurn() {\r\n        String aux = player1.turn;\r\n        player1.turn = player2.turn;\r\n        player2.turn = aux;\r\n        showTurnInUI();\r\n\r\n    }\r\n\r\n    public int numberPiecesLeft = 9;\r\n    public int numberPiecesRight = 9;\r\n\r\n    private JButton lastButton = a7;\r\n    public int numberMove = 0;\r\n    // insetPieceToUI\r\n    public void insertPieceToUI(JButton contentPiece){\r\n            if (currentLogicGame.getIsAvailableContentPiece(contentPiece.getText())) {\r\n                if (numberPiecesLeft != 0 || numberPiecesRight != 0) {\r\n                    if (player1.turn == \"uno\") {\r\n                        contentPiece.setIcon(IconWithPiece1);\r\n                        pieceLeft[9 - numberPiecesLeft].setIcon(IconContentEmpty);\r\n                        numberPiecesLeft--;\r\n                        currentLogicGame.insertPiece(contentPiece.getText(), \"1\");\r\n\r\n                    } else {\r\n                        contentPiece.setIcon(IconWithPiece2);\r\n                        pieceRight[9 - numberPiecesRight].setIcon(IconContentEmpty);\r\n                        numberPiecesRight--;\r\n                        currentLogicGame.insertPiece(contentPiece.getText(), \"2\");\r\n                    }\r\n                    changeTurn();\r\n                } else {\r\n                    System.out.println(\"Todas las piezas insertadas\");\r\n                }\r\n                currentLogicGame.setAvailableContentPiece(contentPiece.getText(), false);\r\n            }\r\n        }\r\n\r\n        int pushKeybord = 0;\r\n\r\n\r\n    //\r\n    public void setNameInTheUI(){\r\n        namePlayerLeft.setText(player1.name);\r\n        namePlayerRight.setText(player2.name);\r\n    }\r\n    //mover pieza\r\n    public void movePieceToUI(JButton myMoveContentPiece){\r\n\r\n            if (player1.turn == \"uno\") {\r\n\r\n                if (numberPiecesLeft == 0 && numberPiecesRight == 0 && myMoveContentPiece.getIcon() == IconWithPiece1 && numberMove == 0) {\r\n\r\n                    lastButton = myMoveContentPiece;\r\n                    myMoveContentPiece.setIcon(IconMove);\r\n                    numberMove++;\r\n                    System.out.println(numberMove);\r\n                }\r\n            }\r\n            if (player2.turn == \"uno\") {\r\n\r\n                if (numberPiecesLeft == 0 && numberPiecesRight == 0 && myMoveContentPiece.getIcon() == IconWithPiece2 && numberMove == 0) {\r\n\r\n                    lastButton = myMoveContentPiece;\r\n                    myMoveContentPiece.setIcon(IconMove);\r\n                    numberMove++;\r\n                    pushKeybord++;\r\n                    System.out.println(numberMove);\r\n                }\r\n            }\r\n\r\n\r\n\r\n        if(numberMove == 1 && currentLogicGame.getIsAvailableContentPiece(myMoveContentPiece.getText())){\r\n            if(currentLogicGame.validateMove(myMoveContentPiece.getText(), lastButton.getText())) {\r\n                if (currentLogicGame.getIsAvailableContentPiece(myMoveContentPiece.getText())) {\r\n                    if (player1.turn == \"uno\") {\r\n                        System.out.println(numberMove);\r\n                        numberPiecesLeft++;\r\n                        currentLogicGame.movePiece(lastButton.getText());\r\n                        lastButton.setIcon(IconContentEmpty);\r\n                    } else {\r\n                        System.out.println(numberMove);\r\n                        numberPiecesRight++;\r\n                        currentLogicGame.movePiece(lastButton.getText());\r\n                        lastButton.setIcon(IconContentEmpty);\r\n                    }\r\n                    numberMove--;\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    //Remove Opponent's pieces\r\n    public void removeOpponentsPiecesOfUI(JButton myContentPieceToRemove){\r\n\r\n            if(myContentPieceToRemove.getIcon() == IconWithPiece1){\r\n                myContentPieceToRemove.setIcon(IconContentEmpty);\r\n                currentLogicGame.removePiece(myContentPieceToRemove.getText());\r\n                player1.numberPieces --;\r\n            }\r\n\r\n        if(myContentPieceToRemove.getIcon() == IconWithPiece2){\r\n                myContentPieceToRemove.setIcon(IconContentEmpty);\r\n                currentLogicGame.removePiece(myContentPieceToRemove.getText());\r\n                player2.numberPieces --;\r\n            }\r\n        if(player1.numberPieces <= 2 && player2.numberPieces <=2 ){\r\n            System.out.println(\"Empate\");\r\n            showIUResult.setText(\"Empate!\");\r\n        }\r\n        changeTurn();\r\n    }\r\n\r\n    //Action Player at the time\r\n    boolean existTicTacToe = false;\r\n\r\n    public void actionPlayerAtTheTime(JButton currentButtonAction) {\r\n\r\n        movePieceToUI(currentButtonAction);\r\n\r\n       if(!existTicTacToe){\r\n           if ((numberPiecesLeft != 0 || numberPiecesRight != 0) && (currentLogicGame.getIsAvailableContentPiece(currentButtonAction.getText()))) {\r\n               showIUResult.setText(\"\");\r\n               //In the Beginning\r\n               insertPieceToUI(currentButtonAction);\r\n\r\n               if (player1.turn == \"dos\"){\r\n                   existTicTacToe =  scoreThreeInARow(\"1\");\r\n                   if(existTicTacToe){\r\n                       // Mostrando alerta de tres en raya\r\n                       showIUResult.setText(\"Tres en raya para el jugador 1\");\r\n                       //Regresando el tunos, para que jueue nuevamente\r\n                       changeTurn();\r\n                   }\r\n               }\r\n              else {\r\n                   if(player2.turn == \"dos\"){\r\n                       existTicTacToe= scoreThreeInARow(\"2\");\r\n                       if (existTicTacToe){\r\n                           // Mostrando alerta de tres en raya\r\n                           showIUResult.setText(\"Tres en raya para el jugador 2\");\r\n                           //Regresando el tunos, para que jueue nuevamente\r\n                           changeTurn();\r\n                       }\r\n                   }\r\n               }\r\n\r\n           }\r\n       }else{\r\n            removeOpponentsPiecesOfUI(currentButtonAction);\r\n            existTicTacToe = false;\r\n            showIUResult.setText(\"\");\r\n            currentLogicGame.setAvailableContentPiece(currentButtonAction.getText(),true);\r\n        }\r\n    }\r\n\r\n\r\n    // Verifica tres en raya\r\n\r\n    public boolean scoreThreeInARow(String num) {\r\n        boolean ganador = false;\r\n\r\n            for (int [][] oneGroupCase: currentLogicGame.CasesTresEnRaya) {\r\n                int x = oneGroupCase[0][0];\r\n                int y = oneGroupCase[0][1];\r\n                int r = oneGroupCase[1][0];\r\n                int s = oneGroupCase[1][1];\r\n                int m = oneGroupCase[2][0];\r\n                int n = oneGroupCase[2][1];\r\n\r\n                if (currentLogicGame.myTable[x][y].equals(num) && currentLogicGame.myTable[r][s].equals(num) && currentLogicGame.myTable[m][n].equals(num)) {\r\n                    String caseTresEnRaya = \"\"+x+y+r+s+m+n;\r\n                    System.out.println(caseTresEnRaya);\r\n                    if(currentLogicGame.isInTheMemory(caseTresEnRaya)){\r\n                        break;\r\n                    }else{\r\n                        currentLogicGame.addToMemory(caseTresEnRaya);\r\n                        ganador = true;\r\n                    }\r\n                }\r\n\r\n        }\r\n\r\n        return ganador;\r\n    }\r\n\r\n    public MainFrame() {\r\n        //Caracteristicas de la ventana que se va abrir\r\n        setSize(300,300);\r\n        setContentPane(PanelPrincipal);\r\n        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n        setBounds(250,100,720,520);\r\n        setBounds(250,100,820,620);\r\n        setVisible(true);//mostrar la venta FirstPanel\r\n\r\n        a7.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                actionPlayerAtTheTime(a7);\r\n\r\n            }\r\n        });\r\n        b6.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n             actionPlayerAtTheTime(b6);\r\n            }\r\n        });\r\n        d7.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n            actionPlayerAtTheTime(d7);\r\n            }\r\n        });\r\n        g7.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                actionPlayerAtTheTime(g7);\r\n            }\r\n        });\r\n        d6.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                actionPlayerAtTheTime(d6);\r\n            }\r\n        });\r\n        f6.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n            actionPlayerAtTheTime(f6);\r\n            }\r\n\r\n        });\r\n        c5.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n            actionPlayerAtTheTime(c5);\r\n            }\r\n        });\r\n        d5.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n            actionPlayerAtTheTime(d5);\r\n            }\r\n        });\r\n        e5.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n            actionPlayerAtTheTime(e5);\r\n            }\r\n        });\r\n        a4.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n            actionPlayerAtTheTime(a4);\r\n            }\r\n        });\r\n        b4.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n            actionPlayerAtTheTime(b4);\r\n            }\r\n        });\r\n        c4.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n            actionPlayerAtTheTime(c4);\r\n            }\r\n        });\r\n        e4.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n            actionPlayerAtTheTime(e4);\r\n            }\r\n        });\r\n        f4.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n            actionPlayerAtTheTime(f4);\r\n            }\r\n        });\r\n        g4.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n            actionPlayerAtTheTime(g4);\r\n            }\r\n        });\r\n        c3.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n            actionPlayerAtTheTime(c3);\r\n            }\r\n        });\r\n        d3.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n            actionPlayerAtTheTime(d3);\r\n            }\r\n        });\r\n        e3.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n            actionPlayerAtTheTime(e3);\r\n            }\r\n        });\r\n        b2.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n            actionPlayerAtTheTime(b2);\r\n            }\r\n        });\r\n        d2.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n            actionPlayerAtTheTime(d2);\r\n            }\r\n        });\r\n        f2.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n            actionPlayerAtTheTime(f2);\r\n            }\r\n        });\r\n        a1.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n            actionPlayerAtTheTime(a1);\r\n            }\r\n        });\r\n        d1.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n            actionPlayerAtTheTime(d1);\r\n            }\r\n        });\r\n        g1.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n            actionPlayerAtTheTime(g1);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n    public JPanel getPanelPrincipal(){\r\n        return  PanelPrincipal;\r\n    }\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/MainFrame.java b/src/main/java/MainFrame.java
--- a/src/main/java/MainFrame.java	(revision 6ccc77d61e32530f8dbe398eb7159366c564889f)
+++ b/src/main/java/MainFrame.java	(date 1653533407690)
@@ -6,8 +6,6 @@
 
 public class MainFrame extends JFrame {
 
-
-
     public Player player1 = new Player("left","uno");
     public Player player2 = new Player("right","dos");
 
@@ -18,51 +16,50 @@
     ImageIcon IconContentEmpty = new ImageIcon("src/main/resources/Image/IconContentPiece.png");
     ImageIcon IconMove = new ImageIcon("src/main/resources/Image/AvailableContent.png");
 
-    private JPanel PanelPrincipal;
-    private JPanel CenterPanel;
-    private JButton a7;
-    private JButton d7;
-    private JButton g7;
-    private JButton b6;
-    private JButton d6;
-    private JButton f6;
-    private JButton c5;
-    private JButton d5;
-    private JButton e5;
-    private JButton a4;
-    private JButton b4;
-    private JButton c4;
-    private JButton e4;
-    private JButton f4;
-    private JButton g4;
-    private JButton c3;
-    private JButton d3;
-    private JButton e3;
-    private JButton b2;
-    private JButton d2;
-    private JButton f2;
-    private JButton a1;
-    private JButton d1;
-    private JButton g1;
-    private JButton pieceLeft1;
-    private JButton pieceLeft2;
-    private JButton pieceLeft3;
-    private JButton pieceLeft4;
-    private JButton pieceLeft5;
-    private JButton pieceLeft6;
-    private JButton pieceLeft7;
-    private JButton pieceLeft8;
-    private JButton pieceLeft9;
-    private JButton pieceRight1;
-    private JButton pieceRight2;
-    private JButton pieceRight3;
-    private JButton pieceRight4;
-    private JButton pieceRight5;
-    private JButton pieceRight6;
-    private JButton pieceRight7;
-    private JButton pieceRight8;
-    private JButton pieceRight9;
-
+    public JPanel PanelPrincipal;
+    public JPanel CenterPanel;
+    public JButton a7;
+    public JButton d7;
+    public JButton g7;
+    public JButton b6;
+    public JButton d6;
+    public JButton f6;
+    public JButton c5;
+    public JButton d5;
+    public JButton e5;
+    public JButton a4;
+    public JButton b4;
+    public JButton c4;
+    public JButton e4;
+    public JButton f4;
+    public JButton g4;
+    public JButton c3;
+    public JButton d3;
+    public JButton e3;
+    public JButton b2;
+    public JButton d2;
+    public JButton f2;
+    public JButton a1;
+    public JButton d1;
+    public JButton g1;
+    public JButton pieceLeft1;
+    public JButton pieceLeft2;
+    public JButton pieceLeft3;
+    public JButton pieceLeft4;
+    public JButton pieceLeft5;
+    public JButton pieceLeft6;
+    public JButton pieceLeft7;
+    public JButton pieceLeft8;
+    public JButton pieceLeft9;
+    public JButton pieceRight1;
+    public JButton pieceRight2;
+    public JButton pieceRight3;
+    public JButton pieceRight4;
+    public JButton pieceRight5;
+    public JButton pieceRight6;
+    public JButton pieceRight7;
+    public JButton pieceRight8;
+    public JButton pieceRight9;
 
     private JButton[] pieceLeft = {pieceLeft1, pieceLeft2, pieceLeft3, pieceLeft4, pieceLeft5, pieceLeft6, pieceLeft7, pieceLeft8, pieceLeft9};
     private JButton[] pieceRight = {pieceRight1, pieceRight2, pieceRight3, pieceRight4, pieceRight5, pieceRight6, pieceRight7, pieceRight8, pieceRight9};
@@ -135,7 +132,7 @@
                         numberPiecesRight--;
                         currentLogicGame.insertPiece(contentPiece.getText(), "2");
                     }
-                    changeTurn();
+                        changeTurn();
                 } else {
                     System.out.println("Todas las piezas insertadas");
                 }
@@ -260,11 +257,36 @@
             showIUResult.setText("");
             currentLogicGame.setAvailableContentPiece(currentButtonAction.getText(),true);
         }
+       if(false) {
+           logicComputer();
+       }
+    }
+//Computer computadora = new Computer("computadora","right","dos");
+
+public String logicComputer(){
+    if(currentLogicGame.getIsAvailableContentPiece("g7")){
+        insertPieceToUI(g7);
+        return "a1";
+    }
+
+    if(currentLogicGame.getIsAvailableContentPiece("g1")){
+        insertPieceToUI(g1);
+         return "a1";
+    }
+    if(currentLogicGame.getIsAvailableContentPiece("a7")){
+        insertPieceToUI(a7);
+        return "a1";
     }
 
+    if(currentLogicGame.getIsAvailableContentPiece("a1")){
+        insertPieceToUI(a1);
+        return "a1";
+    }
+    return "Juego finalizado";
+}
 
     // Verifica tres en raya
-
+String lastThreeInARow;
     public boolean scoreThreeInARow(String num) {
         boolean ganador = false;
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"0cfa01f0-b83b-457f-9f9b-1cad4e687233\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/FirstPanel.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/FirstPanel.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/MainFrame.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/MainFrame.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"CodeStyleSettingsInfer\">\r\n    <option name=\"done\" value=\"true\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"JUnit5 Test Class\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"useMavenConfig\" value=\"true\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectCodeStyleSettingsMigration\">\r\n    <option name=\"version\" value=\"2\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"292YcYZTbSPwISxg5UILSCUP5Xg\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary&quot;: &quot;JUnit5&quot;,\r\n    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5&quot;: &quot;&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Miller/IdeaProjects/Nine-men-s-morris-Grupo10&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateTestDialog.Recents.Supers\">\r\n      <recent name=\"\" />\r\n    </key>\r\n    <key name=\"CreateTestDialog.RecentsKey\">\r\n      <recent name=\"\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.Main (1)\">\r\n    <configuration name=\"Main (1)\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"NIneGame\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"Nine-men-s-morris-Grupo10\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"LogicTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Nine-men-s-morris-Grupo10\" />\r\n      <option name=\"PACKAGE_NAME\" value=\"\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"LogicTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"LogicTest.getIsAvailableContentPieceTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Nine-men-s-morris-Grupo10\" />\r\n      <option name=\"PACKAGE_NAME\" value=\"\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"LogicTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"getIsAvailableContentPieceTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"LogicTest.isAvailableContentPieceTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Nine-men-s-morris-Grupo10\" />\r\n      <option name=\"PACKAGE_NAME\" value=\"\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"LogicTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"isAvailableContentPieceTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main (1)\" />\r\n        <item itemvalue=\"Application.Main\" />\r\n        <item itemvalue=\"JUnit.LogicTest\" />\r\n        <item itemvalue=\"JUnit.LogicTest.isAvailableContentPieceTest\" />\r\n        <item itemvalue=\"JUnit.LogicTest.getIsAvailableContentPieceTest\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"0cfa01f0-b83b-457f-9f9b-1cad4e687233\" name=\"Changes\" comment=\"\" />\r\n      <created>1652312729901</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1652312729901</updated>\r\n      <workItem from=\"1652677605499\" duration=\"11466000\" />\r\n      <workItem from=\"1652716008311\" duration=\"36000\" />\r\n      <workItem from=\"1652723815499\" duration=\"14102000\" />\r\n      <workItem from=\"1652744839151\" duration=\"15000\" />\r\n      <workItem from=\"1652756580459\" duration=\"3736000\" />\r\n      <workItem from=\"1652840058665\" duration=\"721000\" />\r\n      <workItem from=\"1652843395219\" duration=\"3000\" />\r\n      <workItem from=\"1652846052562\" duration=\"1344000\" />\r\n      <workItem from=\"1652849737975\" duration=\"2205000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"main\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 6ccc77d61e32530f8dbe398eb7159366c564889f)
+++ b/.idea/workspace.xml	(date 1653451278323)
@@ -5,6 +5,8 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="0cfa01f0-b83b-457f-9f9b-1cad4e687233" name="Changes" comment="">
+      <change afterPath="$PROJECT_DIR$/src/main/java/Computer.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_22__10_09_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_19_22__10_09_PM__Changes_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/FirstPanel.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/FirstPanel.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/MainFrame.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/MainFrame.java" afterDir="false" />
@@ -54,7 +56,7 @@
     &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
     &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary&quot;: &quot;JUnit5&quot;,
     &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5&quot;: &quot;&quot;,
-    &quot;last_opened_file_path&quot;: &quot;C:/Users/Miller/IdeaProjects/Nine-men-s-morris-Grupo10&quot;,
+    &quot;last_opened_file_path&quot;: &quot;C:/Users/Miller/Downloads/Actividad5-CC3S2&quot;,
     &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
     &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;
   }
@@ -67,7 +69,7 @@
       <recent name="" />
     </key>
   </component>
-  <component name="RunManager" selected="Application.Main (1)">
+  <component name="RunManager" selected="Application.Main">
     <configuration name="Main (1)" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="Main" />
       <module name="NIneGame" />
@@ -113,8 +115,8 @@
     </configuration>
     <recent_temporary>
       <list>
-        <item itemvalue="Application.Main (1)" />
         <item itemvalue="Application.Main" />
+        <item itemvalue="Application.Main (1)" />
         <item itemvalue="JUnit.LogicTest" />
         <item itemvalue="JUnit.LogicTest.isAvailableContentPieceTest" />
         <item itemvalue="JUnit.LogicTest.getIsAvailableContentPieceTest" />
@@ -138,6 +140,9 @@
       <workItem from="1652843395219" duration="3000" />
       <workItem from="1652846052562" duration="1344000" />
       <workItem from="1652849737975" duration="2205000" />
+      <workItem from="1653319148872" duration="31000" />
+      <workItem from="1653373247396" duration="5162000" />
+      <workItem from="1653419970217" duration="5068000" />
     </task>
     <servers />
   </component>
